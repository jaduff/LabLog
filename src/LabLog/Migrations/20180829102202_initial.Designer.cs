// <auto-generated />
using LabLog;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace LabLog.Migrations
{
    [DbContext(typeof(EventModelContext))]
    [Migration("20180829102202_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("LabLog.ComputerUserModel", b =>
                {
                    b.Property<string>("UsernameAssigned");

                    b.Property<DateTime>("TimeAssigned");

                    b.Property<string>("ComputerModelSerialNumber");

                    b.Property<string>("DetectedUsername");

                    b.HasKey("UsernameAssigned", "TimeAssigned");

                    b.HasIndex("ComputerModelSerialNumber");

                    b.ToTable("ComputerUserModel");
                });

            modelBuilder.Entity("LabLog.Domain.Events.LabEvent", b =>
                {
                    b.Property<Guid>("SchoolId");

                    b.Property<int>("Version");

                    b.Property<string>("EventAuthor");

                    b.Property<string>("EventBody");

                    b.Property<string>("EventType")
                        .IsRequired();

                    b.Property<DateTimeOffset>("Timestamp");

                    b.HasKey("SchoolId", "Version");

                    b.ToTable("LabEvents");
                });

            modelBuilder.Entity("LabLog.Models.ComputerModel", b =>
                {
                    b.Property<string>("SerialNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Position");

                    b.Property<Guid?>("RoomModelId");

                    b.HasKey("SerialNumber");

                    b.HasIndex("RoomModelId");

                    b.ToTable("ComputerModel");
                });

            modelBuilder.Entity("LabLog.Models.DamageModel", b =>
                {
                    b.Property<Guid>("DamageId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ComputerModelSerialNumber");

                    b.Property<string>("Description");

                    b.Property<int>("GLPITicketNum");

                    b.Property<string>("ReportedBy");

                    b.Property<bool>("Resolved");

                    b.HasKey("DamageId");

                    b.HasIndex("ComputerModelSerialNumber");

                    b.ToTable("DamageModel");
                });

            modelBuilder.Entity("LabLog.RoomModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid?>("SchoolModelId");

                    b.HasKey("Id");

                    b.HasIndex("SchoolModelId");

                    b.ToTable("RoomModel");
                });

            modelBuilder.Entity("LabLog.SchoolModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("_latestVersion");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("LabLog.ComputerUserModel", b =>
                {
                    b.HasOne("LabLog.Models.ComputerModel")
                        .WithMany("UserList")
                        .HasForeignKey("ComputerModelSerialNumber");
                });

            modelBuilder.Entity("LabLog.Models.ComputerModel", b =>
                {
                    b.HasOne("LabLog.RoomModel")
                        .WithMany("Computers")
                        .HasForeignKey("RoomModelId");
                });

            modelBuilder.Entity("LabLog.Models.DamageModel", b =>
                {
                    b.HasOne("LabLog.Models.ComputerModel")
                        .WithMany("DamageList")
                        .HasForeignKey("ComputerModelSerialNumber");
                });

            modelBuilder.Entity("LabLog.RoomModel", b =>
                {
                    b.HasOne("LabLog.SchoolModel")
                        .WithMany("Rooms")
                        .HasForeignKey("SchoolModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
